package sys; use sys;
package io;

#attach("./helpers.rct");
#attach("./token.rct");
#attach("./statement.rct");
#attach("./lexer.rct");
#attach("./parser.rct");

//copyFolder("C:\Users\djlw7\Desktop\OrkI3\res");
#copyFolder("/home/redcube/git/OrkI3/res");

Print("ORKI3 Interpreter --  written in ReCT");

set Code <- io::ReadFile("./res/grammer.ork");

Lex();

Print(Char(10) + "Lexer Output:");
from (i <- 0) to Tokens->GetLength() -1
{
    if (~Tokens[i]->Type = "whitespace") continue;
    Write("[ Token: "); SetConsoleForeground(10);
    Write(~Tokens[i]->Type); SetConsoleForeground(15);
    Write(", Value: "); SetConsoleForeground(12);
    Write(~~~Tokens[i]->Value->Replace(Char(10), "\n")->Replace(Char(13), "\r")); SetConsoleForeground(15);
    Print(" ]");
}

Parse();

Print(Char(10) + "Parser Output:");
from (i <- 0) to Statements->GetLength() -1
{
    Write("- "); SetConsoleForeground(12);
    Print(~Statements[i]->Name); SetConsoleForeground(15);

    var args <- ~Statements[i]->Args;
    from (ii <- 0) to args->GetLength() - 1
    {
        var arg <- Token(args[ii]);
        Write("   â””-> "); SetConsoleForeground(10);
        Write(arg->Type); SetConsoleForeground(15);
        Write(": "); SetConsoleForeground(3);
        Print(string(arg->Value)); SetConsoleForeground(15);
    }
}